-----Создание таблиц-----
CREATE TABLE producer
	(ID_producer INT IDENTITY PRIMARY KEY,
	Name_producer VARCHAR(60),
	Adress varchar(60),
	Bank_details Int)

CREATE TABLE deliveries
	(Id_deliveries INT IDENTITY PRIMARY KEY,
	ID_producer int,
	ID_product int,
	date_of_delivery date,
	quantity int)

CREATE TABLE product
	(ID_product INT IDENTITY PRIMARY KEY,
	Name_product VARCHAR(60),
	Price INT,
	weight_product int,
	shelf_life int,
	ID_category int,
	Product_balance int)

CREATE TABLE category
	(ID_category INT IDENTITY PRIMARY KEY,
	Name_category VARCHAR(60))



----Связи-----

ALTER TABLE product
ADD CONSTRAINT key1 FOREIGN KEY(ID_category) 
REFERENCES category(ID_category)
ON DELETE CASCADE;

ALTER TABLE deliveries
ADD CONSTRAINT key2 FOREIGN KEY(ID_product) 
REFERENCES product(ID_product)
ON DELETE CASCADE;

ALTER TABLE deliveries
ADD CONSTRAINT key3 FOREIGN KEY(ID_producer) 
REFERENCES producer(ID_producer)
ON DELETE CASCADE;

-----Заполнение------

INSERT INTO category VALUES('lactic');
INSERT INTO category VALUES('meat');
INSERT INTO category VALUES('drinks');
INSERT INTO category VALUES('canned food');
INSERT INTO category VALUES('vegetables');

INSERT INTO producer VALUES('TopMyaso', '2218  Hawks Nest Lane', 567235);
INSERT INTO producer VALUES('Burbur', '4334  Arron Smith Drive', 345612);
INSERT INTO producer VALUES('Dors', '3463  Bond Street', 567067);
INSERT INTO producer VALUES('Juklin', '1489  Earnhardt Drive', 457684);
INSERT INTO producer VALUES('GurbalUK', '1770  Mayo Street', 557856);

INSERT INTO product VALUES('Milk', 40, 1, 2, 1, 50);
INSERT INTO product VALUES('butter', 60, 1, 3, 1, 30);
INSERT INTO product VALUES('A hen', 120, 1, 4, 2, 20);
INSERT INTO product VALUES('pork', 190, 1, 3, 2, 40);
INSERT INTO product VALUES('Vodka', 100, 2, 100, 3, 100);
INSERT INTO product VALUES('Sprite', 18, 2, 100, 3, 150);
INSERT INTO product VALUES('sardines', 56, 1, 1000, 4, 40);
INSERT INTO product VALUES('corn',10, 1, 500, 4, 60);
INSERT INTO product VALUES('pepper', 10, 1, 50, 5, 10);
INSERT INTO product VALUES('carrot', 5, 2, 40, 5, 15);

INSERT INTO deliveries VALUES(1, 1, '2019-12-05',60);
INSERT INTO deliveries VALUES(1, 2, '2019-11-20',40);
INSERT INTO deliveries VALUES(2, 3, '2019-12-09',30);
INSERT INTO deliveries VALUES(2, 4, '2019-11-22',50);
INSERT INTO deliveries VALUES(3, 5, '2019-11-21',110);
INSERT INTO deliveries VALUES(3, 6, '2019-11-14',160);
INSERT INTO deliveries VALUES(4, 7, '2019-11-13',50);
INSERT INTO deliveries VALUES(4, 8, '2019-11-04',60);
INSERT INTO deliveries VALUES(5, 9, '2019-12-08',10);
INSERT INTO deliveries VALUES(5, 10, '2019-12-01',15);

1.1

SELECT Name_producer, Adress FROM Producer
inner join deliveries on deliveries.ID_producer = producer.ID_producer
WHERE EXISTS (SELECT Id_deliveries FROM deliveries)

1.2 

SELECT Name_product, Name_category, date_of_delivery, shelf_life FROM product
inner join category on product.ID_category = category.ID_category
inner join deliveries on deliveries.ID_product = product.ID_product
WHERE DATEDIFF(day, date_of_delivery, GETDATE()) >= shelf_life

1.3 

SELECT Id_deliveries, Name_product, weight_product * quantity as 'weight' FROM product 
inner join deliveries on deliveries.ID_product = product.ID_product

1.4

CREATE VIEW Minimum as SELECT Name_product, Price, Name_category, Product_balance FROM product
inner join category on category.ID_category = product.Id_category
WHERE Product_balance < 30

SELECT * FROM Minimum

DROP VIEW Minimum

2

CREATE PROCEDURE Change_bank @id_producer INT, @New_Bank INT AS
BEGIN
	UPDATE producer SET Bank_details = @New_Bank WHERE ID_producer = @id_producer
END

exec Change_bank 1, 111111

DROP PROCEDURE Change_bank

3.1

CREATE PROCEDURE Check_if_more @id_product INT as
BEGIN 
	if exists (SELECT Name_product FROM product
			inner join deliveries on deliveries.ID_product = product.ID_product
			WHERE quantity < Product_balance AND product.ID_product = @id_product)
		BEGIN
			Raiserror('Залишок не може бути більше поставленої кількості!!!!', 16, 1) with nowait 
		END
	ELSE	
		begin	
			print 'Помилок не знайдено'
		end
END

exec Check_if_more 11

DROP PROCEDURE Check_if_more

4.1 

CREATE VIEW Goods_in_stock AS SELECT Name_product, Name_producer, Price, Product_balance FROM product
inner join deliveries on deliveries.ID_product = product.ID_product
inner join producer on producer.ID_producer = deliveries.ID_producer

SELECT * FROM Goods_in_stock

DROP VIEW Goods_in_stock

4.2 

CREATE VIEW Total_price_balance AS 
SELECT Name_product, (Price * Product_balance) as total_price FROM product

SELECT * FROM Total_price_balance

DROP VIEW Total_price_balance

4.3 

SELECT Name_product, Product_balance, date_of_delivery, is_good, (Product_balance - is_good) as is_bad
FROM product 
inner join deliveries on product.ID_product = deliveries.Id_deliveries

4.4 

INSERT INTO producer VALUES('test', '4334  Arron Smith Drive', 345612);

SELECT Name_producer FROM producer 
WHERE NOT EXISTS (SELECT ID_producer FROM deliveries
where deliveries.ID_producer = producer.ID_producer) 